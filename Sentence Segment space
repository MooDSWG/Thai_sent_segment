{"cells":[{"cell_type":"markdown","source":["## State Condition"],"metadata":{"id":"v3tlb4hJrFgb"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"zVvslsfMIrIh"},"outputs":[],"source":["task = \"sep\"\n","pretokenized = True \n","model_checkpoint = \"airesearch/wangchanberta-base-att-spm-uncased\"\n","batch_size = 16\n","num_epoch = 3\n","if(pretokenized):\n","    condition = f\"pretokenized_{task}_\"\n","else:\n","    condition =  f\"auto_tokenized_{task}_\"\n","limit_n_tokens = 150\n","save=\"epoch\"\n","#save=(\"no\",\"epoch\", or \"step\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1658980661795,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"23TOba33L4qf","outputId":"f72d5041-b548-4bee-9d94-90add53238d0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Thu Jul 28 03:57:42 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   40C    P0    27W / 250W |      0MiB / 16280MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}],"source":["gpu_info = !nvidia-smi\n","gpu_info = '\\n'.join(gpu_info)\n","if gpu_info.find('failed') >= 0:\n","  print('Not connected to a GPU')\n","else:\n","  print(gpu_info)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19077,"status":"ok","timestamp":1658980680869,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"IhGH9YN4vXDs","outputId":"5863306f-357b-4d18-b353-9b01e4d079c9"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import  drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","metadata":{"id":"SKA2FHhT8P7A"},"source":["## Set Environment"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22181,"status":"ok","timestamp":1658980703046,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"outputId":"2459ce41-a938-47c1-b3de-e799833d1dc3","id":"O63wB-xA8P7A"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting datasets\n","  Downloading datasets-2.4.0-py3-none-any.whl (365 kB)\n","\u001b[K     |████████████████████████████████| 365 kB 7.4 MB/s \n","\u001b[?25hCollecting transformers==4.9.2\n","  Downloading transformers-4.9.2-py3-none-any.whl (2.6 MB)\n","\u001b[K     |████████████████████████████████| 2.6 MB 47.0 MB/s \n","\u001b[?25hCollecting seqeval\n","  Downloading seqeval-1.2.2.tar.gz (43 kB)\n","\u001b[K     |████████████████████████████████| 43 kB 2.2 MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers==4.9.2) (4.12.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers==4.9.2) (3.7.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers==4.9.2) (1.21.6)\n","Collecting sacremoses\n","  Downloading sacremoses-0.0.53.tar.gz (880 kB)\n","\u001b[K     |████████████████████████████████| 880 kB 56.2 MB/s \n","\u001b[?25hCollecting tokenizers<0.11,>=0.10.1\n","  Downloading tokenizers-0.10.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (3.3 MB)\n","\u001b[K     |████████████████████████████████| 3.3 MB 42.5 MB/s \n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers==4.9.2) (4.64.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers==4.9.2) (2.23.0)\n","Collecting huggingface-hub==0.0.12\n","  Downloading huggingface_hub-0.0.12-py3-none-any.whl (37 kB)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers==4.9.2) (21.3)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers==4.9.2) (2022.6.2)\n","Collecting pyyaml>=5.1\n","  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n","\u001b[K     |████████████████████████████████| 596 kB 62.0 MB/s \n","\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from huggingface-hub==0.0.12->transformers==4.9.2) (4.1.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers==4.9.2) (3.0.9)\n","Collecting xxhash\n","  Downloading xxhash-3.0.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (212 kB)\n","\u001b[K     |████████████████████████████████| 212 kB 73.5 MB/s \n","\u001b[?25hCollecting fsspec[http]>=2021.11.1\n","  Downloading fsspec-2022.7.0-py3-none-any.whl (141 kB)\n","\u001b[K     |████████████████████████████████| 141 kB 66.7 MB/s \n","\u001b[?25hCollecting datasets\n","  Downloading datasets-2.3.2-py3-none-any.whl (362 kB)\n","\u001b[K     |████████████████████████████████| 362 kB 14.9 MB/s \n","\u001b[?25h  Downloading datasets-2.3.1-py3-none-any.whl (362 kB)\n","\u001b[K     |████████████████████████████████| 362 kB 73.8 MB/s \n","\u001b[?25h  Downloading datasets-2.3.0-py3-none-any.whl (361 kB)\n","\u001b[K     |████████████████████████████████| 361 kB 63.6 MB/s \n","\u001b[?25h  Downloading datasets-2.2.2-py3-none-any.whl (346 kB)\n","\u001b[K     |████████████████████████████████| 346 kB 80.5 MB/s \n","\u001b[?25hCollecting dill<0.3.5\n","  Downloading dill-0.3.4-py2.py3-none-any.whl (86 kB)\n","\u001b[K     |████████████████████████████████| 86 kB 7.2 MB/s \n","\u001b[?25hCollecting datasets\n","  Downloading datasets-2.2.1-py3-none-any.whl (342 kB)\n","\u001b[K     |████████████████████████████████| 342 kB 78.0 MB/s \n","\u001b[?25hRequirement already satisfied: dill in /usr/local/lib/python3.7/dist-packages (from datasets) (0.3.5.1)\n","  Downloading datasets-2.2.0-py3-none-any.whl (342 kB)\n","\u001b[K     |████████████████████████████████| 342 kB 68.1 MB/s \n","\u001b[?25h  Downloading datasets-2.1.0-py3-none-any.whl (325 kB)\n","\u001b[K     |████████████████████████████████| 325 kB 78.4 MB/s \n","\u001b[?25h  Downloading datasets-2.0.0-py3-none-any.whl (325 kB)\n","\u001b[K     |████████████████████████████████| 325 kB 64.0 MB/s \n","\u001b[?25h  Downloading datasets-1.18.4-py3-none-any.whl (312 kB)\n","\u001b[K     |████████████████████████████████| 312 kB 75.1 MB/s \n","\u001b[?25hRequirement already satisfied: pyarrow!=4.0.0,>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (6.0.1)\n","  Downloading datasets-1.18.3-py3-none-any.whl (311 kB)\n","\u001b[K     |████████████████████████████████| 311 kB 79.5 MB/s \n","\u001b[?25h  Downloading datasets-1.18.2-py3-none-any.whl (312 kB)\n","\u001b[K     |████████████████████████████████| 312 kB 72.3 MB/s \n","\u001b[?25h  Downloading datasets-1.18.1-py3-none-any.whl (311 kB)\n","\u001b[K     |████████████████████████████████| 311 kB 65.5 MB/s \n","\u001b[?25h  Downloading datasets-1.18.0-py3-none-any.whl (311 kB)\n","\u001b[K     |████████████████████████████████| 311 kB 77.9 MB/s \n","\u001b[?25h  Downloading datasets-1.17.0-py3-none-any.whl (306 kB)\n","\u001b[K     |████████████████████████████████| 306 kB 72.4 MB/s \n","\u001b[?25h  Downloading datasets-1.16.1-py3-none-any.whl (298 kB)\n","\u001b[K     |████████████████████████████████| 298 kB 72.0 MB/s \n","\u001b[?25h  Downloading datasets-1.16.0-py3-none-any.whl (298 kB)\n","\u001b[K     |████████████████████████████████| 298 kB 79.0 MB/s \n","\u001b[?25h  Downloading datasets-1.15.1-py3-none-any.whl (290 kB)\n","\u001b[K     |████████████████████████████████| 290 kB 74.7 MB/s \n","\u001b[?25h  Downloading datasets-1.15.0-py3-none-any.whl (290 kB)\n","\u001b[K     |████████████████████████████████| 290 kB 72.6 MB/s \n","\u001b[?25hRequirement already satisfied: multiprocess in /usr/local/lib/python3.7/dist-packages (from datasets) (0.70.13)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from datasets) (1.3.5)\n","  Downloading datasets-1.14.0-py3-none-any.whl (290 kB)\n","\u001b[K     |████████████████████████████████| 290 kB 73.3 MB/s \n","\u001b[?25h  Downloading datasets-1.13.3-py3-none-any.whl (287 kB)\n","\u001b[K     |████████████████████████████████| 287 kB 78.7 MB/s \n","\u001b[?25h  Downloading datasets-1.13.2-py3-none-any.whl (287 kB)\n","\u001b[K     |████████████████████████████████| 287 kB 71.4 MB/s \n","\u001b[?25h  Downloading datasets-1.13.1-py3-none-any.whl (287 kB)\n","\u001b[K     |████████████████████████████████| 287 kB 71.5 MB/s \n","\u001b[?25h  Downloading datasets-1.13.0-py3-none-any.whl (285 kB)\n","\u001b[K     |████████████████████████████████| 285 kB 77.8 MB/s \n","\u001b[?25h  Downloading datasets-1.12.1-py3-none-any.whl (270 kB)\n","\u001b[K     |████████████████████████████████| 270 kB 74.6 MB/s \n","\u001b[?25h  Downloading datasets-1.12.0-py3-none-any.whl (269 kB)\n","\u001b[K     |████████████████████████████████| 269 kB 77.9 MB/s \n","\u001b[?25h  Downloading datasets-1.11.0-py3-none-any.whl (264 kB)\n","\u001b[K     |████████████████████████████████| 264 kB 80.3 MB/s \n","\u001b[?25hRequirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.9.2) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.9.2) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.9.2) (2022.6.15)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.9.2) (1.24.3)\n","Requirement already satisfied: scikit-learn>=0.21.3 in /usr/local/lib/python3.7/dist-packages (from seqeval) (1.0.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.3->seqeval) (3.1.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.3->seqeval) (1.1.0)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.3->seqeval) (1.7.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers==4.9.2) (3.8.1)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas->datasets) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas->datasets) (2022.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas->datasets) (1.15.0)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.9.2) (7.1.2)\n","Building wheels for collected packages: seqeval, sacremoses\n","  Building wheel for seqeval (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for seqeval: filename=seqeval-1.2.2-py3-none-any.whl size=16180 sha256=7a6d52d62340cff8136548658586bf9db38d0cc1c3c59f3d194e0a43fe917696\n","  Stored in directory: /root/.cache/pip/wheels/05/96/ee/7cac4e74f3b19e3158dce26a20a1c86b3533c43ec72a549fd7\n","  Building wheel for sacremoses (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sacremoses: filename=sacremoses-0.0.53-py3-none-any.whl size=895260 sha256=91a61df431262294641f9169ff299267bfd1dab9e484d84d5afaff20571e684d\n","  Stored in directory: /root/.cache/pip/wheels/87/39/dd/a83eeef36d0bf98e7a4d1933a4ad2d660295a40613079bafc9\n","Successfully built seqeval sacremoses\n","Installing collected packages: xxhash, tokenizers, sacremoses, pyyaml, huggingface-hub, fsspec, transformers, seqeval, datasets\n","  Attempting uninstall: pyyaml\n","    Found existing installation: PyYAML 3.13\n","    Uninstalling PyYAML-3.13:\n","      Successfully uninstalled PyYAML-3.13\n","Successfully installed datasets-1.11.0 fsspec-2022.7.0 huggingface-hub-0.0.12 pyyaml-6.0 sacremoses-0.0.53 seqeval-1.2.2 tokenizers-0.10.3 transformers-4.9.2 xxhash-3.0.0\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting sentencepiece\n","  Downloading sentencepiece-0.1.96-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)\n","\u001b[K     |████████████████████████████████| 1.2 MB 7.3 MB/s \n","\u001b[?25hInstalling collected packages: sentencepiece\n","Successfully installed sentencepiece-0.1.96\n"]}],"source":["!pip install datasets transformers==4.9.2 seqeval\n","!pip install sentencepiece"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W-StNLF48P7B"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import glob\n","import sys\n","import os\n","import re\n","\n","from transformers import (\n","    AutoModel, AutoTokenizer, AutoConfig,\n","    AutoModelForTokenClassification,\n","    TrainingArguments, Trainer,\n","    DataCollatorForTokenClassification\n",")\n","\n","from datasets import (\n","    load_dataset, load_metric,\n","    Dataset,\n","    DatasetDict,\n","    Features, Sequence, ClassLabel, Value\n",")\n","from sklearn.metrics import classification_report"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["a72e6982c41d45ce9f3aafa39ca27038","00f1e7110eef444ebb093f7ca685e2e0","2ee82f5169694d7bbe0637d1845d685a","09a7875409bd4808986436396844fd82","20cab4c97f7b4338a48df8f5954694dc","1085689d13234dababac3e9e5c8bc424","8df07526dbc94fd2a27121e0b6bc05a6","43e7f401fe774f6eb64314aceb12802f","c86681eb5c23479b9c0df788c5ba0973","f067b10dab8b4243a8ae97201d3ac36d","e1dc0b3b11be46e28040d6e1957102d7","a51a5cc6b30940b2809f26f0c4dd7568","91d1101d9c24424096a45c09f08ff898","524b4d6ee99e4bb0887ff42d8053ff6e","5e5301acc4724690a434d155545518ff","eb25d09854f34c6fb1ec0d98c97da0e5","fc62ba30efca426094d5c2cff88916b6","ede14d3dbb1645f9b522c57cc3723b3f","8fd81e0d102a4806b1cb92ced3d3907d","c6e5e86209a64e159cc7cd02f1a1c971","fa9151ae14144e8098f54662cee562c1","7f27d730b64c4bb1a91d243136b703b1","3c05f601fa114306b3594654b4dd7d4b","ec8156d389564e1ebda507ad9ae3fbf9","de73b8e75f49426a84cc42ac977997d2","e534568b62ea42ce91a2f809d1eb58a4","b89fe2b301d74e25a8dd7b2bf8e6cc3b","8a71a034bbc0485ca27c22545ceaee79","bd24c92686624a12a090b2d4c8d4ce71","cd8c9ab3f00d483a88b33e05bd68203b","4e00a38c39a444b99f82e3b815192f26","18b2ffa0f62545449da84407b135b093","cccc7a8c6a9d48cfb1750864be0772f8","0c9b233d3ece461980e65c8b43972037","c638e5495536433a9232260ab67670ce","68b31e88b06a460d883623ec5fc88b71","34a8975f479c4565bf1ca4687268cd68","7e9a66bc452a4709b1e609e3eeb36620","996bae0d44c5452e9def6d16ad069300","857e4dd43e794988aeeda9be8e0ff40a","751abf8e2be94fc0a880110ac1f22188","ad788a8d9d244aefa451cddad7264dc7","c6557fa568064c87b5c23684768674f7","411d0461b62749a386b95a63b4311120"]},"executionInfo":{"elapsed":19363,"status":"ok","timestamp":1658980729275,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"zSp5KGBKJRQ0","outputId":"0f1c648e-c5e9-43e1-87d9-30311aabaa6a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/546 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a72e6982c41d45ce9f3aafa39ca27038"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/423M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a51a5cc6b30940b2809f26f0c4dd7568"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the model checkpoint at airesearch/wangchanberta-base-att-spm-uncased were not used when initializing CamembertModel: ['lm_head.decoder.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.bias', 'lm_head.decoder.weight', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.bias']\n","- This IS expected if you are initializing CamembertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing CamembertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n"]},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/282 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3c05f601fa114306b3594654b4dd7d4b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading:   0%|          | 0.00/905k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0c9b233d3ece461980e65c8b43972037"}},"metadata":{}}],"source":["lm_name = 'airesearch/wangchanberta-base-att-spm-uncased'\n","model = AutoModel.from_pretrained(lm_name)\n","tokenizer = AutoTokenizer.from_pretrained(lm_name)"]},{"cell_type":"markdown","metadata":{"id":"whPRbBNbIrIl"},"source":["## Loading the dataset"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IreSlFmlIrIm"},"outputs":[],"source":["import datasets\n","from datasets import  load_dataset, load_metric\n","from datasets import Dataset, Features, Sequence, ClassLabel,Value "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PKN03HEfXPJa"},"outputs":[],"source":["def get_df(filepath,num_sent=1):\n","    keyList = ['tokens', 'abbre', 'type','NER_clause','NER_sent','conn_tags','conn_sense','conn_index']\n","    data = {key: [] for key in keyList}\n","    for filename in glob.glob(os.path.join(filepath, '*.txt')):\n","        with open(os.path.join(os.getcwd(), filename), 'r') as f:\n","        #print(filename)\n","            column1 = []\n","            column2 = []\n","            column3 = []\n","            column4 = []\n","            column5 = []\n","            column6 = []\n","            column7 = []\n","            column8 = []\n","            count_sent = 0\n","            for i,line in enumerate(f.readlines()):\n","                entry = line.rstrip('\\n').split('\\t')\n","                #print(entry)\n","                #print(i)\n","                if(len(entry)!=7):\n","                    count_sent+=1\n","                    #print(count_sent)\n","                    entry = ['<_>','space','space','space','space','SP','-1']\n","                    if(count_sent ==  num_sent):\n","                        #print(\"cut : \", column1)\n","                        #print(\"before : \",data[\"tokens\"])\n","                        data[\"tokens\"].append(column1)\n","                        data[\"abbre\"].append(column2)\n","                        data[\"type\"].append(column3)\n","                        data[\"NER_clause\"].append(column4)\n","                        data[\"NER_sent\"].append(column5)\n","                        data[\"conn_tags\"].append(column6)\n","                        data[\"conn_sense\"].append(column7)\n","                        data[\"conn_index\"].append(column8)\n","                        #print(\"after add: \",data[\"tokens\"])\n","                        column1 = []\n","                        column2 = []\n","                        column3 = []\n","                        column4 = []\n","                        column5 = []\n","                        column6 = []\n","                        column7 = []\n","                        column8 = []\n","                        #print(column1)\n","                        #print(\"after add: \",data[\"tokens\"])\n","                        count_sent = 0\n","                        continue\t\n","                #print(\"dict status : \",data[\"tokens\"])\n","                column1.append(\"\".join(str(entry[0]).split()))#remove internal space\n","                column2.append(entry[1])\n","                column3.append(entry[2])\n","                column4.append(entry[3])\n","                column5.append(entry[4])\n","                if((entry[5]=='N')  or  (entry[5]=='SP') ):\n","                    column6.append(str(entry[5]))\n","                else:               \n","                    column6.append('CON')\n","                column7.append(entry[5])\n","                column8.append(int(entry[6]))\n","            #print(data[\"tokens\"])\n","    df=pd.DataFrame.from_dict(data)\n","    df['n_tokens'] =df.tokens.apply(len)\n","    return df\n"," "]},{"cell_type":"code","source":["def get_df_limittoken(filepath,num_token=limit_n_tokens):\n","    keyList = ['tokens','POS','NER', 'clause','sep']\n","    data = {key: [] for key in keyList}\n","    for filename in glob.glob(os.path.join(filepath, '*.txt')):\n","        with open(os.path.join(os.getcwd(), filename), 'r') as f:\n","        #print(filename)\n","            column1 = []\n","            column2 = []\n","            column3 = []\n","            column4 = []\n","            column5 = []\n","            count_token = 0\n","            for i,line in enumerate(f.readlines()):\n","                entry = line.rstrip('\\n').split('\\t')\n","                #print(entry)\n","                #print(i)\n","                if(len(entry)!=4):\n","                    entry = [' ','space','space','space']\n","                if(count_token==num_token):\n","                    data[\"tokens\"].append(column1)\n","                    data[\"POS\"].append(column2)\n","                    data[\"NER\"].append(column3)\n","                    data[\"clause\"].append(column4)\n","                    data[\"sep\"].append(column5)\n","                    column1 = []\n","                    column2 = []\n","                    column3 = []\n","                    column4 = []\n","                    column5 = []\n","                    count_token = 0\n","                    #continue\n","                column1.append(str(entry[0]).replace('_',' '))\n","                #replace _ with space\n","                column2.append(entry[1])\n","                column3.append(entry[2])\n","                column4.append(entry[3])\n","                if(entry[3]=='space'):\n","                    column5.append('SEP')\n","                else:               \n","                    column5.append('N')\n","                count_token+=1\n","            data[\"tokens\"].append(column1)\n","            data[\"POS\"].append(column2)\n","            data[\"NER\"].append(column3)\n","            data[\"clause\"].append(column4)\n","            data[\"sep\"].append(column5)\n","    df=pd.DataFrame.from_dict(data)\n","    df['n_tokens'] =df.tokens.apply(len)\n","    return df"],"metadata":{"id":"SKjx5ehwnQUY"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_kVBTvqAolmI"},"outputs":[],"source":["train_df=get_df_limittoken('/content/drive/My Drive/LST_20/train/')\n","test_df=get_df_limittoken('/content/drive/My Drive/LST_20/test/')\n","dev_df=get_df_limittoken('/content/drive/My Drive/LST_20/dev/')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DyIjYeS5Nm0Y","executionInfo":{"status":"ok","timestamp":1658980906337,"user_tz":-420,"elapsed":10,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"}},"outputId":"ec7b89e6-ce16-4629-f34b-b5cb3e16db07"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 tokens  \\\n","0     [กกต., ตราด,  , จัด, พิธี, ลง, นาม, สัตยาบัน, ...   \n","1     [สภา,  , อบต.,  , ทั้ง,  , 7,  , แห่ง, ได้, คร...   \n","2     [สภา, ที่, เคย, ดำรง, ตำแหน่ง, มา, ก่อน,  , ซึ...   \n","3     [วุฒิสภา, ผ่าน, พรบ., องค์กร, ส่วน, ปกครอง, ท้...   \n","4     [มอง, ว่า, นักการเมือง, ท้องถิ่น,  , มี, ความ,...   \n","...                                                 ...   \n","1650  [ใต้, กลยุทธ์, คล่อง, ตัว,  , อิสระ,  , หลากหล...   \n","1651  [ขอ, รัฐ, เพิ่ม, เงิน, -, ทำ, ประกัน, ชีวิต, อ...   \n","1652  [การที่, จะ, เข้า, ไป, คัดกรอง, และ, ให้, ความ...   \n","1653  [\", ปรัชญา, \", จะ, ขอ, คุย, กับ, \", เป้ย, \", อ...   \n","1654  [กับ, เป้ย, อีก, ครั้ง,  , เดี๋ยว, รอ, ให้, ทุ...   \n","\n","                                                    POS  \\\n","0     [NN, NN, PU, VV, NN, VV, NN, NN, PS, FX, VV, P...   \n","1     [NN, PU, NN, PU, AJ, PU, NU, PU, CL, AX, VV, N...   \n","2     [NN, CC, AX, VV, NN, VV, AV, PU, CC, VV, NN, F...   \n","3     [NN, VV, NN, NN, NN, VV, NN, space, NN, VV, NN...   \n","4     [VV, CC, NN, NN, PU, VV, FX, VV, AV, PU, PS, N...   \n","...                                                 ...   \n","1650    [PS, NN, VV, NN, PU, VV, PU, VV, PU, PU, space]   \n","1651  [VV, NN, VV, NN, PU, VV, VV, NN, NN, space, PS...   \n","1652  [CC, AX, AV, AV, VV, CC, VV, NN, PS, NN, PS, N...   \n","1653  [PU, NN, PU, AX, VV, VV, PS, PU, NN, PU, AJ, C...   \n","1654  [PS, NN, AJ, CL, PU, AV, VV, CC, AJ, CL, VV, A...   \n","\n","                                                    NER  \\\n","0     [B_ORG, B_LOC, O, O, O, O, O, O, O, O, O, O, O...   \n","1     [O, O, O, O, O, O, B_NUM, O, O, O, O, O, O, O,...   \n","2     [B_ORG, O, O, O, O, O, O, O, O, O, O, O, O, O,...   \n","3     [B_ORG, O, O, B_ORG, I_ORG, I_ORG, E_ORG, spac...   \n","4     [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...   \n","...                                                 ...   \n","1650              [O, O, O, O, O, O, O, O, O, O, space]   \n","1651  [O, O, O, O, O, O, O, O, B_ORG, space, O, B_DT...   \n","1652  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...   \n","1653  [O, B_PER, O, O, O, O, O, O, B_PER, O, O, O, s...   \n","1654  [O, B_PER, O, O, O, O, O, O, O, O, O, O, space...   \n","\n","                                                 clause  \\\n","0     [B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...   \n","1     [I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...   \n","2     [I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, E_C...   \n","3     [B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, E_C...   \n","4     [E_CLS, B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...   \n","...                                                 ...   \n","1650  [I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...   \n","1651  [B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...   \n","1652  [I_CLS, I_CLS, I_CLS, I_CLS, E_CLS, B_CLS, I_C...   \n","1653  [B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...   \n","1654  [I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, E_C...   \n","\n","                                                    sep  n_tokens  \n","0     [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...       150  \n","1     [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...       150  \n","2     [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...        78  \n","3     [N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N...       150  \n","4     [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...       105  \n","...                                                 ...       ...  \n","1650                [N, N, N, N, N, N, N, N, N, N, SEP]        11  \n","1651  [N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N...       150  \n","1652  [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...       111  \n","1653  [N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N...       150  \n","1654  [N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N...       105  \n","\n","[1655 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-feec5db7-f66a-49e7-a181-e1a369f76a42\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tokens</th>\n","      <th>POS</th>\n","      <th>NER</th>\n","      <th>clause</th>\n","      <th>sep</th>\n","      <th>n_tokens</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[กกต., ตราด,  , จัด, พิธี, ลง, นาม, สัตยาบัน, ...</td>\n","      <td>[NN, NN, PU, VV, NN, VV, NN, NN, PS, FX, VV, P...</td>\n","      <td>[B_ORG, B_LOC, O, O, O, O, O, O, O, O, O, O, O...</td>\n","      <td>[B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[สภา,  , อบต.,  , ทั้ง,  , 7,  , แห่ง, ได้, คร...</td>\n","      <td>[NN, PU, NN, PU, AJ, PU, NU, PU, CL, AX, VV, N...</td>\n","      <td>[O, O, O, O, O, O, B_NUM, O, O, O, O, O, O, O,...</td>\n","      <td>[I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[สภา, ที่, เคย, ดำรง, ตำแหน่ง, มา, ก่อน,  , ซึ...</td>\n","      <td>[NN, CC, AX, VV, NN, VV, AV, PU, CC, VV, NN, F...</td>\n","      <td>[B_ORG, O, O, O, O, O, O, O, O, O, O, O, O, O,...</td>\n","      <td>[I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, E_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[วุฒิสภา, ผ่าน, พรบ., องค์กร, ส่วน, ปกครอง, ท้...</td>\n","      <td>[NN, VV, NN, NN, NN, VV, NN, space, NN, VV, NN...</td>\n","      <td>[B_ORG, O, O, B_ORG, I_ORG, I_ORG, E_ORG, spac...</td>\n","      <td>[B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, E_C...</td>\n","      <td>[N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N...</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[มอง, ว่า, นักการเมือง, ท้องถิ่น,  , มี, ความ,...</td>\n","      <td>[VV, CC, NN, NN, PU, VV, FX, VV, AV, PU, PS, N...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","      <td>[E_CLS, B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...</td>\n","      <td>105</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1650</th>\n","      <td>[ใต้, กลยุทธ์, คล่อง, ตัว,  , อิสระ,  , หลากหล...</td>\n","      <td>[PS, NN, VV, NN, PU, VV, PU, VV, PU, PU, space]</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, space]</td>\n","      <td>[I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, SEP]</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1651</th>\n","      <td>[ขอ, รัฐ, เพิ่ม, เงิน, -, ทำ, ประกัน, ชีวิต, อ...</td>\n","      <td>[VV, NN, VV, NN, PU, VV, VV, NN, NN, space, PS...</td>\n","      <td>[O, O, O, O, O, O, O, O, B_ORG, space, O, B_DT...</td>\n","      <td>[B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N...</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>1652</th>\n","      <td>[การที่, จะ, เข้า, ไป, คัดกรอง, และ, ให้, ความ...</td>\n","      <td>[CC, AX, AV, AV, VV, CC, VV, NN, PS, NN, PS, N...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","      <td>[I_CLS, I_CLS, I_CLS, I_CLS, E_CLS, B_CLS, I_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...</td>\n","      <td>111</td>\n","    </tr>\n","    <tr>\n","      <th>1653</th>\n","      <td>[\", ปรัชญา, \", จะ, ขอ, คุย, กับ, \", เป้ย, \", อ...</td>\n","      <td>[PU, NN, PU, AX, VV, VV, PS, PU, NN, PU, AJ, C...</td>\n","      <td>[O, B_PER, O, O, O, O, O, O, B_PER, O, O, O, s...</td>\n","      <td>[B_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N...</td>\n","      <td>150</td>\n","    </tr>\n","    <tr>\n","      <th>1654</th>\n","      <td>[กับ, เป้ย, อีก, ครั้ง,  , เดี๋ยว, รอ, ให้, ทุ...</td>\n","      <td>[PS, NN, AJ, CL, PU, AV, VV, CC, AJ, CL, VV, A...</td>\n","      <td>[O, B_PER, O, O, O, O, O, O, O, O, O, O, space...</td>\n","      <td>[I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, I_CLS, E_C...</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N...</td>\n","      <td>105</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1655 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-feec5db7-f66a-49e7-a181-e1a369f76a42')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-feec5db7-f66a-49e7-a181-e1a369f76a42 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-feec5db7-f66a-49e7-a181-e1a369f76a42');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}],"source":["test_df"]},{"cell_type":"code","source":["test_df.n_tokens.max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QPer1F4E66Bn","executionInfo":{"status":"ok","timestamp":1658980906337,"user_tz":-420,"elapsed":7,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"}},"outputId":"f623a93f-55e7-4d24-9fd2-10e0c56a0502"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["150"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nTchl4Cmww5K"},"outputs":[],"source":["train = train_df[[\"tokens\",\"sep\"]].to_dict(orient=\"series\")\n","dev = dev_df[[\"tokens\",\"sep\"]].to_dict(orient=\"series\")\n","test = test_df[[\"tokens\",\"sep\"]].to_dict(orient=\"series\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fb0tTII-x5oY","executionInfo":{"status":"ok","timestamp":1658980906337,"user_tz":-420,"elapsed":5,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"}},"outputId":"ce1cc921-5044-4b29-bbbf-7fb68b99dead"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'sep': 0       [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...\n"," 1       [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...\n"," 2       [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...\n"," 3       [N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N...\n"," 4       [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...\n","                               ...                        \n"," 1650                  [N, N, N, N, N, N, N, N, N, N, SEP]\n"," 1651    [N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N...\n"," 1652    [N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...\n"," 1653    [N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N...\n"," 1654    [N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N...\n"," Name: sep, Length: 1655, dtype: object,\n"," 'tokens': 0       [กกต., ตราด,  , จัด, พิธี, ลง, นาม, สัตยาบัน, ...\n"," 1       [สภา,  , อบต.,  , ทั้ง,  , 7,  , แห่ง, ได้, คร...\n"," 2       [สภา, ที่, เคย, ดำรง, ตำแหน่ง, มา, ก่อน,  , ซึ...\n"," 3       [วุฒิสภา, ผ่าน, พรบ., องค์กร, ส่วน, ปกครอง, ท้...\n"," 4       [มอง, ว่า, นักการเมือง, ท้องถิ่น,  , มี, ความ,...\n","                               ...                        \n"," 1650    [ใต้, กลยุทธ์, คล่อง, ตัว,  , อิสระ,  , หลากหล...\n"," 1651    [ขอ, รัฐ, เพิ่ม, เงิน, -, ทำ, ประกัน, ชีวิต, อ...\n"," 1652    [การที่, จะ, เข้า, ไป, คัดกรอง, และ, ให้, ความ...\n"," 1653    [\", ปรัชญา, \", จะ, ขอ, คุย, กับ, \", เป้ย, \", อ...\n"," 1654    [กับ, เป้ย, อีก, ครั้ง,  , เดี๋ยว, รอ, ให้, ทุ...\n"," Name: tokens, Length: 1655, dtype: object}"]},"metadata":{},"execution_count":14}],"source":["test"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aGoymAZXM3oA"},"outputs":[],"source":["sep_features= Features(\n","                {\n","                    \"tokens\": Sequence(Value('string')),\n","                    \"sep\": Sequence(feature=ClassLabel(names=['N','SEP']))\n","                })"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kAqXek3ZDIQQ"},"outputs":[],"source":["data = DatasetDict({'train': Dataset.from_dict(train,features=sep_features), \n","                 'dev': Dataset.from_dict(dev,features=sep_features),\n","                 'test': Dataset.from_dict(test,features=sep_features)})"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BliNjdk-I2RB","executionInfo":{"status":"ok","timestamp":1658980924321,"user_tz":-420,"elapsed":11,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"}},"outputId":"59a980c8-4996-4180-df4d-f7a101235b11"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'sep': Sequence(feature=ClassLabel(num_classes=2, names=['N', 'SEP'], names_file=None, id=None), length=-1, id=None),\n"," 'tokens': Sequence(feature=Value(dtype='string', id=None), length=-1, id=None)}"]},"metadata":{},"execution_count":17}],"source":["data['train'].features"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i3j8APAoIrI3"},"outputs":[],"source":["from datasets import ClassLabel, Sequence\n","import random\n","import pandas as pd\n","from IPython.display import display, HTML\n","\n","def show_random_elements(dataset, num_examples=10):\n","    assert num_examples <= len(dataset), \"Can't pick more elements than there are in the dataset.\"\n","    picks = []\n","    for _ in range(num_examples):\n","        pick = random.randint(0, len(dataset)-1)\n","        while pick in picks:\n","            pick = random.randint(0, len(dataset)-1)\n","        picks.append(pick)\n","    \n","    df = pd.DataFrame(dataset[picks])\n","    for column, typ in dataset.features.items():\n","        if isinstance(typ, ClassLabel):\n","            df[column] = df[column].transform(lambda i: typ.names[i])\n","        elif isinstance(typ, Sequence) and isinstance(typ.feature, ClassLabel):\n","            df[column] = df[column].transform(lambda x: [typ.feature.names[i] for i in x])\n","    display(HTML(df.to_html()))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SZy5tRB_IrI7","scrolled":true,"executionInfo":{"status":"ok","timestamp":1658980924321,"user_tz":-420,"elapsed":10,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"}},"outputId":"67eb3a00-e96f-4c09-8ef9-9402c651ccc0"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tokens</th>\n","      <th>sep</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[ , แต่, ก่อน, ที่, เธอ, จะ, ตกปากรับคำ, เป็น, นางแบบ, กิตติมศักดิ์, ให้, นั้น,  , เธอ, ก็, มี, ข้อ, ตกลง, กับ, ผู้, จัด, งาน, ด้วย,  , ว่า, จะ, ต้อง, มี, เพื่อน, เธอ, ร่วม, เดิน, ด้วย, ประมาณ,  , 2-3,  , คน,  , เนื่องจาก, การ, แต่ง, หน้า, ทำ, ผม, ค่อนข้าง, กิน, เวลา, นาน,  , หาก, มี, เพื่อน, ร่วม, เดิน, ด้วย, ก็, สามารถ, พูดคุย, กัน, ได้, ระหว่าง, รอ, งาน,  , และ, เพราะ, เป็น, สาว, ที่, มี, ชื่อเสียง, อยู่, ใน, วง, สังคม, ชั้น, สูง,  , ก่อน, การ, รับปาก, เดิน, แบบ, ทุก, ครั้ง,  , ทำให้, ต้อง, คำนึง, ถึง, แบรนด์, ของ, สินค้า,  , ซึ่ง, จะ, ต้อง, เหมาะสม, กับ, ...]</td>\n","      <td>[SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[สังคม, ก็, จะ, ไม่, สงบสุข,  , นายก, ฯ, รู้, อยู่, ว่า, เป็น, ใคร,  ]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, SEP]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[ให้, เข้า, ท่วม, ได้,  , และ, จัด, หน่วย, แพทย์, เคลื่อน, ที่, ให้, บริการ, ประชาชน, ใน, พื้นที่, ร่วมกับ, สถานี, อนามัย, ด้วย,  , มท.1,  , ชี้, จีน, ปล่อย, น้ำ, คือ, ต้นเหตุ,  , วัน, เดียว, กัน,  , พล.ต.อ., โกวิท,  , วัฒนะ,  , นายก, รัฐมนตรี,  , และ, รัฐมนตรี, ว่าการ, กระทรวง, มหาดไทย,  , พร้อม, คณะ,  , ลง, พื้นที่, ตรวจ, สถานการณ์, น้ำ, ท่วม, และ, แจก, ถุง, ยังชีพ, ที่,  , จ., น่าน,  , โดย, มี, เจ้าหน้าที่, บรรยาย, สรุป, ความ, เสียหาย, จาก, อุทกภัย,  , ดัง, นี้,  , อ., ท่าวังผา, พื้นที่, เสียหาย,  , 10,  , ตำบล,  , 88,  , หมู่,  , บ้านเรือน,  , 7,007,  , หลังคา,  , มูลค่า, ประมาณ, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[ยิ่งใหญ่, อย่าง, ใน, อดีต, ยุค,  , 70,  , และ,  , 80,  , ให้, ได้, แต่, ก่อน, จะ, ถึง, วัน, นั้น, ก็, ต้อง, ให้, นัก, เตะ, ทุก, คน, เชื่อมั่น, ว่า, พวก, เขา, ทุก, คน, สามารถ, ทำ,  , ได้, และ, สามารถ, เป็น, ทีม, ที่, แข็งแกร่ง, เหนือ, กว่า, บาร์เซโลนา, แชมป์, ยุโรป, ปี, นี้,  , \", เป้าหมาย, ของ, เขา, คือ, เป็น, ทีม, ที่, ดี, ที่สุด, หาก, เรา, ไม่, มี, ความ, คิด, ที่, จะ, เป็น, หนึ่ง, ใน, อังกฤษ, หรือ, ใน, ยุโรป, ก็, ไม่, มี, ประโยชน์, ที่, จะ, พยายาม, กัน, ต่อไป, \", เขา, กล่าว, ผ่าน, เว็บไซต์, ของ, สโมสร,  , \", ลิเวอร์พูล, เป็น, ทีม, ที่, มี, ชื่อ, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[ , 1,314,  , คะแนน,  , และ, ที่,  , 3,  , โอห์,  , นู,  , รี,  , (, เกาหลีใต้, ),  , ทำ, ได้,  , 1,308,  , คะแนน,  , ยิงปืน,  , ที่, มี, ชิง,  , 1,  , ทอง,  , จาก, ปืน, ยาว, อัด, ลม,  , 10,  , เมตร,  , ดลยพรรณ,  , ถิรานุวัฒนกูล,  , ที่, ผ่าน, เข้า, ถึง, รอบ, ชิง, ชนะ, เลิศ,  , 8,  , คน, สุดท้าย,  , ทำ, ผล, งาน, ไม่, ดี,  , ยิง, ได้,  , 104.2,  , คะแนน,  , รวม, กับ, รอบ, คัดเลือก,  , 391,  , คะแนน,  , ได้,  , 495.2,  , คะแนน,  , ได้, แค่, ที่,  , 6,  , เท่านั้น, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>[ , เพื่อ, ขอ, อนุญาต, ถอน, ทนาย, นั้น,  , ศาล, พิจารณา, แล้ว, อนุญาต,  , ส่วน, ที่, จำเลย, ยื่น, คำ, ร้อง, อ้าง, ว่า, ข้อ, กฎหมาย, ที่, ใช้, บังคับ, คดี, นี้, ขัด, หรือ, แย้ง, ต่อ,  , รธน., นั้น, โดย, ยื่น, คำ, ร้อง, เมื่อ,  , 31,  , ก.ค., 2551,  , ศาล, พิจารณา, แล้ว, เห็น, ควร, ให้, พิจารณา, ประเด็น, ดังกล่าว, ไว้, ใน, คำ, พิพากษา,  , โดย, เมื่อ, ได้, ตัว, จำเลย, มา, แล้ว, จึง, จะ, นำ, คดี, ขึ้น, มา, พิจารณา,  , ขณะ, ที่, วัน, เดียว, กัน,  , เมื่อ, เวลา,  , 09.00,  , น., ที่, สำนักงาน, อัยการ, สูงสุด,  , ถ., รัชดาฯ,  , อัยการ, ฝ่ายคดีพิเศษ 4,  , มี, คำสั่ง, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>[ , มี, ความ, ต้องการ, ใน, ปริมาณ, มาก,  , เท่า, กับ, เป็น, โอกาส, ของ, ทีโอเอ,  , มูลค่า, การ, ค้า, ใน, ต่าง, ประเทศ, ของ, สี, ทีโอเอ,  , วัน, นี้,  , มี, ประมาณ,  , 90, %,  , และ, ส่ง, ออก, อีก,  , 10, %,  , แต่, ใน, อนาคต, แล้ว,  , ตลาด, สี, ทีโอเอ, ใน, ต่าง, ประเทศ,  , จะ, มี, อัตรา, การ, เติบโต, ขึ้น, อย่าง, เด่นชัด, จาก, การ, ขยาย, การ, ลง, ทุน, ภูมิภาค, เอเชีย, ใน, ช่วง, ที่, ผ่าน, มา, ทิศทาง, ทีโอเอ, ยังคง, สาน, ต่อ,  , แต่, ภาย, ใต้, วิกฤติ, เศรษฐกิจ, และ, กำลัง, ซื้อ,  , การ, โหม, หนัก, ใน, ตลาด, ใน, ประเทศ,  , เป็น, ทิศทาง, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>[วิจารณ์, แซด, \", ทักษิณ, \", เรียก, อัยการ, พบ,  , ถก, ดับ, ไฟ, ใต้, หรือ, กัน, สั่ง, ยุบ, ไทยรักไทย,  , \", ทักษิณ, \",  , เรียก, \", พชร, -, โกวิท, -, จุมพล, \",  , ถก, ปัญหา, ไฟ, ใต้,  , ถูก, วิจารณ์, แซด, ยก, ถก, ปัญหา, ไฟ, ใต้, เป็น, ข้อ, อ้าง,  , ก่อน, ถูก, ชี้, ชะตา, ยุบ, พรรคทรท., พรุ่ง, นี้, (, 27, ),  , \", พชร, \",  , ลั่น,  , ขรก., ใน, พระบาทสมเด็จพระเจ้าอยู่หัว,  , ต้อง, ไม่, เกรงใจ, นักการเมือง, หน้า, ไหน,  , ยัน, ไม่, มี, พิจารณา, นอก, สำนวน,  , \", จุมพล, \",  , ตามน้ำ, ร่วม, ถก, ข่าว, กรอง, ขู่, บึ้ม, สนาม, บิน, บ้านทอน, -, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>[ระบุ, นาย, สมัคร, สร้าง, หลักฐาน, เท็จ,  , ปลอมแปลง, เอกสาร, ย้อนหลัง, ว่า,  , ใน, ส่วน, นี้, สามารถ, ดำเนินการ, ทาง, กฎหมาย, เพราะ, เป็น, ความ, ผิด, ฐาน, ให้การ, เท็จ, ได้, แต่, ต้อง, มี, ผู้, ร้อง, ทุกข์,  , ซึ่ง, ไม่, จำเป็น, ว่า, ต้อง, เป็น, คู่, กรณี, เท่านั้น,  , แต่, หาก, ใคร, เห็น, ว่า, ได้รับ, ความ, เสียหาย, ก็, สามารถ, ดำเนินการ, ร้อง, ทุกข์, ต่อ, เจ้าพนักงาน, สืบสวนสอบสวน, ได้, ทันที,  , ด้าน, นาย, วรินทร์,  , เทียมจรัส,  , ส.ว., สรรหา,  , กล่าว, ว่า,  , ใน, ฐานะ, ที่, ตน, เป็น, ผู้, ร้อง, ศาล, รัฐธรรมนูญ, ให้, วินิจฉัย, คุณสมบัติ, นาย, สมัคร, จะ, ยัง, ไม่, ดำเนินการ, ใด, ๆ,  , เนื่องจาก, ถือ, ว่า, ภารกิจ, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, ...]</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>[ดิน, เข้า, มา, สู่, มาตรา,  , 22,  , ตาม, กฎหมาย, สลาก, ฯ,  , 2517,  , จะ, ทำ, ความ, เดือดร้อน, ให้, กับ, ผู้, ค้า, หวย, บน, ดิน, ทั่ว, ประเทศ,  , โดยเฉพาะ, ต้อง, เสีย, ส่วน, แบ่ง, รายได้, จาก, ร้อย, ละ,  , 12,  , เหลือ, ร้อย, ละ,  , 7,  , เท่านั้น,  , ขณะ, ที่, พ่อค้าแม่ค้า, หวย, บน, ดิน, ต่าง, มี, ราย, จ่าย, ใน, เรื่อง, ของ, คน, เดิน, โพย,  , หรือ, การ, ให้, ส่วน, ลด, กับ, ลูกค้า,  , เพื่อ, แข่งขัน, กับ, หวย, ใต้ดิน,  , หาก, ลด, ส่วน, แบ่ง, ตรง, นี้, ก็, ทำให้, พ่อค้าแม่ค้า, อยู่, ไม่, ได้, เช่น, กัน,  , นอกจาก, นี้, หาก, ต้อง, พิมพ์, ...]</td>\n","      <td>[N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, N, SEP, N, N, N, N, N, ...]</td>\n","    </tr>\n","  </tbody>\n","</table>"]},"metadata":{}}],"source":["show_random_elements(data['train'], num_examples=10)"]},{"cell_type":"markdown","metadata":{"id":"n9qywopnIrJH"},"source":["## Preprocessing the data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Us7VZeI_MNUj"},"outputs":[],"source":["label_all_tokens = True\n","#True: all tokens have same label as original word\n","#False: only the first token have same label as original word"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vc0BSBLIIrJQ"},"outputs":[],"source":["def tokenize_and_align_labels(examples):\n","    tokenized_inputs = tokenizer(examples[\"tokens\"], truncation=True, is_split_into_words=True)\n","    tokens1 = [tokenizer.convert_ids_to_tokens(x) for x in tokenized_inputs[\"input_ids\"] ]\n","    tokens = [[token.replace( 'ํา',\"ำ\") for token in row] for row in tokens1]\n","    ids=[]\n","    labels = []\n","    for i, label in enumerate(examples[f\"{task}\"]):\n","        word_ids = tokenized_inputs.word_ids(batch_index=i)\n","        previous_word_idx = None\n","        label_ids = []\n","        for word_idx in word_ids:\n","            # Special tokens have a word id that is None. We set the label to -100 so they are automatically ignored in the loss function.\n","            if word_idx is None:\n","                label_ids.append(-100)\n","            # Set the label for the first token of each word.\n","            elif word_idx != previous_word_idx:\n","                label_ids.append(label[word_idx])\n","            # For the other tokens in a word, we set the label to either the current label or -100, depending on\n","            # the label_all_tokens flag.\n","            else:\n","                label_ids.append(label[word_idx] if label_all_tokens else -100)\n","            previous_word_idx = word_idx\n","\n","        labels.append(label_ids)\n","        ids.append(word_ids)\n","\n","    tokenized_inputs[\"labels\"] = labels\n","    tokenized_inputs[\"word_ids\"] = ids\n","    tokenized_inputs[\"tokens_bert\"] = tokens\n","    return tokenized_inputs\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","referenced_widgets":["f1a7b953688447adbcb63fd7b664f1aa","a3fea809bed6498098fab95c434e75f2","c8b3b53c48c84e03ae4a294844634ab3","a8707b08bdf64b489ef515b07e3e220f","3b165ffc5ba64e7aa992ce46d47ae64e","c0d0b933ba824e90be6b0e0e900be802","bf32469a7290449cbcdbb75aac2e6717","46d96bebefd747bcb22d888b3d61829d","8ee185e3089847a7a9c82fac7f47e315","0887c532cf9145cebe5a45be0eca4686","9d5a7d6e637949418b68f4764293fccc","2524dc209f1548b9b815fcdb62acdef0","58799fbd7ba54ef2879789f82c6c04d6","0eb441aa5e234fcaa6e8f6fda4a220f3","edc853b2b7bf44b5be3d2ba5ec504363","9aa1ce041fab4a8e9b7a328079825558","46c14e31c5ad48cda5ef236648f89b09","74d23ed6d009472f9419a096a403d150","7b3c087a224a4ac59d47230ce88f0017","2454d1971bb14a45af2420bba896110a","e53c099a9fb741daaa89c11465c6477c","4888c0c28cf54ff88209061ee9d9c005"]},"executionInfo":{"elapsed":845264,"status":"ok","timestamp":1658981769577,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"fRM6NFMO82XL","outputId":"1b342008-f8be-4e93-c1c7-b7b3c589243a"},"outputs":[{"output_type":"stream","name":"stderr","text":["Parameter 'function'=<function tokenize_and_align_labels at 0x7f1b4b409710> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/21 [00:00<?, ?ba/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f1a7b953688447adbcb63fd7b664f1aa"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/2 [00:00<?, ?ba/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2524dc209f1548b9b815fcdb62acdef0"}},"metadata":{}}],"source":["tokenized_datasets = data.map(tokenize_and_align_labels, batched=True)"]},{"cell_type":"code","source":["tokenized_datasets['train'][11]['labels']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bABAAfoPY6ig","executionInfo":{"status":"ok","timestamp":1658981769577,"user_tz":-420,"elapsed":8,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"}},"outputId":"c9c7b4e9-b186-4fd2-8754-043d24e405db"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[-100,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 1,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 1,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," 0,\n"," -100]"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"545PP3o8IrJV"},"source":["## Fine-tuning the model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nZf4a6Or5hwV"},"outputs":[],"source":["label_list = data['train'].features[f\"{task}\"].feature.names"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1658981771356,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"2hWcOkebnU6I","outputId":"ba182624-ad00-4819-b6bb-393a19d15edd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['N', 'SEP']"]},"metadata":{},"execution_count":25}],"source":["label_list "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3566,"status":"ok","timestamp":1658982710329,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"TlqNaB8jIrJW","outputId":"ec646b7a-9339-4dbc-918f-f3512fa6ea27"},"outputs":[{"output_type":"stream","name":"stderr","text":["loading configuration file https://huggingface.co/airesearch/wangchanberta-base-att-spm-uncased/resolve/main/config.json from cache at /root/.cache/huggingface/transformers/616a9e2dfc52e9d019b75d219ed800a27158ed299bd4fad91363110fe93dfce1.27c4f6581fbedf3d12e9fae96d4fbb8bc3064cd88ae545414e7cffc7c5bbc52f\n","Model config CamembertConfig {\n","  \"architectures\": [\n","    \"RobertaForMaskedLM\"\n","  ],\n","  \"attention_probs_dropout_prob\": 0.1,\n","  \"bos_token_id\": 0,\n","  \"eos_token_id\": 2,\n","  \"gradient_checkpointing\": false,\n","  \"hidden_act\": \"gelu\",\n","  \"hidden_dropout_prob\": 0.1,\n","  \"hidden_size\": 768,\n","  \"initializer_range\": 0.02,\n","  \"intermediate_size\": 3072,\n","  \"layer_norm_eps\": 1e-12,\n","  \"max_position_embeddings\": 512,\n","  \"model_type\": \"camembert\",\n","  \"num_attention_head\": 12,\n","  \"num_attention_heads\": 12,\n","  \"num_hidden_layers\": 12,\n","  \"pad_token_id\": 1,\n","  \"position_embedding_type\": \"absolute\",\n","  \"transformers_version\": \"4.9.2\",\n","  \"type_vocab_size\": 1,\n","  \"use_cache\": true,\n","  \"vocab_size\": 25005\n","}\n","\n","loading weights file https://huggingface.co/airesearch/wangchanberta-base-att-spm-uncased/resolve/main/pytorch_model.bin from cache at /root/.cache/huggingface/transformers/1eda265bdd85935f17c4e85e9c28e56154e1f50fc8488af73c1b055ceddf292b.a049314b098e88fb885e807c4ac10975e0472235845475ad6b2cf0792902ca69\n","Some weights of the model checkpoint at airesearch/wangchanberta-base-att-spm-uncased were not used when initializing CamembertForTokenClassification: ['lm_head.decoder.bias', 'lm_head.dense.weight', 'lm_head.layer_norm.bias', 'lm_head.decoder.weight', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.bias']\n","- This IS expected if you are initializing CamembertForTokenClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing CamembertForTokenClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of CamembertForTokenClassification were not initialized from the model checkpoint at airesearch/wangchanberta-base-att-spm-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n","PyTorch: setting up devices\n","The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).\n"]}],"source":["model = AutoModelForTokenClassification.from_pretrained(lm_name, num_labels=len(label_list))\n","model_name = model_checkpoint.split(\"/\")[-1]\n","\n","args = TrainingArguments(\n","    f\"/content/drive/My Drive/discon model/'{model_name}-{num_epoch} epoch-{condition}\",\n","    evaluation_strategy = \"epoch\",\n","    learning_rate=2e-5,\n","    per_device_train_batch_size=batch_size,\n","    per_device_eval_batch_size=batch_size,\n","    num_train_epochs=num_epoch,\n","    save_strategy='no',\n","    #save_total_limit = 2, \n","    #load_best_model_at_end=True,\n","    weight_decay=0.01,\n","    push_to_hub=False,\n",")\n","data_collator = DataCollatorForTokenClassification(tokenizer)\n","metric = load_metric(\"seqeval\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UmvbnJ9JIrJd"},"outputs":[],"source":["def compute_metrics(p):\n","    predictions, labels = p\n","    predictions = np.argmax(predictions, axis=2)\n","\n","    # Remove ignored index (special tokens)\n","    true_predictions = [\n","        [label_list[p] for (p, l) in zip(prediction, label) if l != -100]\n","        for prediction, label in zip(predictions, labels)\n","    ]\n","    true_labels = [\n","        [label_list[l] for (p, l) in zip(prediction, label) if l != -100]\n","        for prediction, label in zip(predictions, labels)\n","    ]\n","\n","    results = metric.compute(predictions=true_predictions, references=true_labels)\n","    return {\n","        \"precision\": results[\"overall_precision\"],\n","        \"recall\": results[\"overall_recall\"],\n","        \"f1\": results[\"overall_f1\"],\n","        \"accuracy\": results[\"overall_accuracy\"],\n","    }"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"imY1oC3SIrJf"},"outputs":[],"source":["trainer = Trainer(\n","    model,\n","    args,\n","    #for pre-tokenized dataset\n","    train_dataset=tokenized_datasets['train'],\n","    eval_dataset=tokenized_datasets['dev'],\n","    #for auto tokenized dataset\n","    # train_dataset=tokenized_string_datasets['train'],\n","    # eval_dataset=tokenized_string_datasets['dev'],    \n","    data_collator=data_collator,\n","    tokenizer=tokenizer,\n","    compute_metrics=compute_metrics\n",")"]},{"cell_type":"code","source":["trainer.evaluate()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tiHRiEnR98I9","executionInfo":{"status":"ok","timestamp":1658982710772,"user_tz":-420,"elapsed":12,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"}},"outputId":"f97b27b1-c1bc-4c2c-c10f-b05ff360c915"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["The following columns in the evaluation set  don't have a corresponding argument in `CamembertForTokenClassification.forward` and have been ignored: sep, tokens.\n","***** Running Evaluation *****\n","  Num examples = 0\n","  Batch size = 16\n"]},{"output_type":"execute_result","data":{"text/plain":["{'eval_runtime': 0.0153,\n"," 'eval_samples_per_second': 0.0,\n"," 'eval_steps_per_second': 0.0}"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":621},"executionInfo":{"elapsed":1753233,"status":"ok","timestamp":1658984463996,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"3tlotgBzMNUm","outputId":"287f0a2d-7a9d-45dc-d1e8-d0d0956ef2c1"},"outputs":[{"output_type":"stream","name":"stderr","text":["The following columns in the training set  don't have a corresponding argument in `CamembertForTokenClassification.forward` and have been ignored: sep, tokens, tokens_bert, word_ids.\n","***** Running training *****\n","  Num examples = 20401\n","  Num Epochs = 3\n","  Instantaneous batch size per device = 16\n","  Total train batch size (w. parallel, distributed & accumulation) = 16\n","  Gradient Accumulation steps = 1\n","  Total optimization steps = 3828\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='3828' max='3828' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [3828/3828 29:12, Epoch 3/3]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>0.018700</td>\n","      <td>No log</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>0.015400</td>\n","      <td>No log</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>0.014400</td>\n","      <td>No log</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["The following columns in the evaluation set  don't have a corresponding argument in `CamembertForTokenClassification.forward` and have been ignored: sep, tokens.\n","***** Running Evaluation *****\n","  Num examples = 0\n","  Batch size = 16\n","The following columns in the evaluation set  don't have a corresponding argument in `CamembertForTokenClassification.forward` and have been ignored: sep, tokens.\n","***** Running Evaluation *****\n","  Num examples = 0\n","  Batch size = 16\n","The following columns in the evaluation set  don't have a corresponding argument in `CamembertForTokenClassification.forward` and have been ignored: sep, tokens.\n","***** Running Evaluation *****\n","  Num examples = 0\n","  Batch size = 16\n","\n","\n","Training completed. Do not forget to share your model on huggingface.co/models =)\n","\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["TrainOutput(global_step=3828, training_loss=0.017373581291366146, metrics={'train_runtime': 1752.8684, 'train_samples_per_second': 34.916, 'train_steps_per_second': 2.184, 'total_flos': 8977336436667564.0, 'train_loss': 0.017373581291366146, 'epoch': 3.0})"]},"metadata":{},"execution_count":37}],"source":["trainer.train()"]},{"cell_type":"markdown","metadata":{"id":"BJ7B19X7NmJz"},"source":["##Evaluation for gold standard Pretokenized Dataset"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":26385,"status":"ok","timestamp":1658984490377,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"EBHPSHBcNmJz","colab":{"base_uri":"https://localhost:8080/","height":176},"outputId":"36e3b870-fa48-4ff1-9f0c-46c692d68faf"},"outputs":[{"output_type":"stream","name":"stderr","text":["The following columns in the test set  don't have a corresponding argument in `CamembertForTokenClassification.forward` and have been ignored: sep, tokens, tokens_bert, word_ids.\n","***** Running Prediction *****\n","  Num examples = 1655\n","  Batch size = 16\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='104' max='104' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [104/104 00:15]\n","    </div>\n","    "]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seqeval/metrics/sequence_labeling.py:171: UserWarning: N seems not to be NE tag.\n","  warnings.warn('{} seems not to be NE tag.'.format(chunk))\n","/usr/local/lib/python3.7/dist-packages/seqeval/metrics/sequence_labeling.py:171: UserWarning: SEP seems not to be NE tag.\n","  warnings.warn('{} seems not to be NE tag.'.format(chunk))\n"]}],"source":["predictions, labels, _ = trainer.predict(tokenized_datasets['test'])\n","predictions = np.argmax(predictions, axis=2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gKmKl116oKXP"},"outputs":[],"source":["bert_prediction = [\n","    [(id, token, prediction) for (id, token, prediction) in zip(row_id, row_token,row_predictions) ]\n","    for row_id, row_token, row_predictions in zip(tokenized_datasets['test']['word_ids'],tokenized_datasets['test']['tokens_bert'],predictions)\n","]\n","\n","gold_label = [\n","    [label for label in row_label ]\n","    for row_label in tokenized_datasets['test'][task]\n","]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"klZJljKW1-VU"},"outputs":[],"source":["wrap_predict = [] \n","for row in bert_prediction:\n","    predict_row=[]\n","    previous_word=None\n","    for item in row:\n","        if(item[0] is not None):\n","            if(item[0] !=previous_word):\n","                predict_row.append(item[-1])\n","                previous_word = item[0]\n","    wrap_predict.append(predict_row)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"njQ9sMMbpzxs"},"outputs":[],"source":["sep_list=[\"N\",\"SEP\"]\n","def flatten(t):\n","    return [sep_list[item] for sublist in t for item in sublist]\n","flat_true_predictions = flatten(wrap_predict)\n","flat_true_labels = flatten(gold_label)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":3813,"status":"ok","timestamp":1658984494783,"user":{"displayName":"Apiwat Jaroonpol","userId":"17107765437651157828"},"user_tz":-420},"id":"KuU_16eIiLYi","colab":{"base_uri":"https://localhost:8080/"},"outputId":"4dc02eb7-8f36-430d-f055-11d61fed2a36"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              precision    recall  f1-score        support\n","N              0.992000  0.997279  0.994633  207278.000000\n","SEP            0.863998  0.682476  0.762584    5250.000000\n","accuracy       0.989503  0.989503  0.989503       0.989503\n","macro avg      0.927999  0.839878  0.878608  212528.000000\n","weighted avg   0.988838  0.989503  0.988900  212528.000000"],"text/html":["\n","  <div id=\"df-d6e05a47-d83b-4001-9451-883f7d62e897\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1-score</th>\n","      <th>support</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>N</th>\n","      <td>0.992000</td>\n","      <td>0.997279</td>\n","      <td>0.994633</td>\n","      <td>207278.000000</td>\n","    </tr>\n","    <tr>\n","      <th>SEP</th>\n","      <td>0.863998</td>\n","      <td>0.682476</td>\n","      <td>0.762584</td>\n","      <td>5250.000000</td>\n","    </tr>\n","    <tr>\n","      <th>accuracy</th>\n","      <td>0.989503</td>\n","      <td>0.989503</td>\n","      <td>0.989503</td>\n","      <td>0.989503</td>\n","    </tr>\n","    <tr>\n","      <th>macro avg</th>\n","      <td>0.927999</td>\n","      <td>0.839878</td>\n","      <td>0.878608</td>\n","      <td>212528.000000</td>\n","    </tr>\n","    <tr>\n","      <th>weighted avg</th>\n","      <td>0.988838</td>\n","      <td>0.989503</td>\n","      <td>0.988900</td>\n","      <td>212528.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6e05a47-d83b-4001-9451-883f7d62e897')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d6e05a47-d83b-4001-9451-883f7d62e897 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d6e05a47-d83b-4001-9451-883f7d62e897');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}],"source":["result = classification_report(flat_true_labels,flat_true_predictions,output_dict=True,labels=sep_list)\n","result_df=pd.DataFrame(result).transpose()\n","result_df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mx5x88Ah7K9R"},"outputs":[],"source":["result_df.to_csv(f\"/content/drive/My Drive/discon model/'{model_name}-{num_epoch} epoch-{condition}/{num_epoch} epoch-{condition}-wrap2200withN.csv\")"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["0VGGHrjXrQMh","whPRbBNbIrIl","n9qywopnIrJH"],"name":"Sentence Segment space","provenance":[{"file_id":"10hmbE_i4VC1suV2vR3sKLIg9ogM38cS-","timestamp":1658931010636},{"file_id":"1NELsE-6CyrOTZUfBRsl2ZbHuBTze1q8N","timestamp":1658740806424},{"file_id":"1XDdFD0l1L5UakgRw8SVxB-FPOit6qYU-","timestamp":1637638047242},{"file_id":"1Z9YjM7bzvzPuNQ4C11cFcD46hg6K4eGi","timestamp":1636450823506},{"file_id":"https://github.com/huggingface/notebooks/blob/master/examples/token_classification.ipynb","timestamp":1636352321184}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"a72e6982c41d45ce9f3aafa39ca27038":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_00f1e7110eef444ebb093f7ca685e2e0","IPY_MODEL_2ee82f5169694d7bbe0637d1845d685a","IPY_MODEL_09a7875409bd4808986436396844fd82"],"layout":"IPY_MODEL_20cab4c97f7b4338a48df8f5954694dc"}},"00f1e7110eef444ebb093f7ca685e2e0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1085689d13234dababac3e9e5c8bc424","placeholder":"​","style":"IPY_MODEL_8df07526dbc94fd2a27121e0b6bc05a6","value":"Downloading: 100%"}},"2ee82f5169694d7bbe0637d1845d685a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_43e7f401fe774f6eb64314aceb12802f","max":546,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c86681eb5c23479b9c0df788c5ba0973","value":546}},"09a7875409bd4808986436396844fd82":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f067b10dab8b4243a8ae97201d3ac36d","placeholder":"​","style":"IPY_MODEL_e1dc0b3b11be46e28040d6e1957102d7","value":" 546/546 [00:00&lt;00:00, 4.79kB/s]"}},"20cab4c97f7b4338a48df8f5954694dc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1085689d13234dababac3e9e5c8bc424":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8df07526dbc94fd2a27121e0b6bc05a6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"43e7f401fe774f6eb64314aceb12802f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c86681eb5c23479b9c0df788c5ba0973":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f067b10dab8b4243a8ae97201d3ac36d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e1dc0b3b11be46e28040d6e1957102d7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a51a5cc6b30940b2809f26f0c4dd7568":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_91d1101d9c24424096a45c09f08ff898","IPY_MODEL_524b4d6ee99e4bb0887ff42d8053ff6e","IPY_MODEL_5e5301acc4724690a434d155545518ff"],"layout":"IPY_MODEL_eb25d09854f34c6fb1ec0d98c97da0e5"}},"91d1101d9c24424096a45c09f08ff898":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fc62ba30efca426094d5c2cff88916b6","placeholder":"​","style":"IPY_MODEL_ede14d3dbb1645f9b522c57cc3723b3f","value":"Downloading: 100%"}},"524b4d6ee99e4bb0887ff42d8053ff6e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8fd81e0d102a4806b1cb92ced3d3907d","max":423498558,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c6e5e86209a64e159cc7cd02f1a1c971","value":423498558}},"5e5301acc4724690a434d155545518ff":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fa9151ae14144e8098f54662cee562c1","placeholder":"​","style":"IPY_MODEL_7f27d730b64c4bb1a91d243136b703b1","value":" 423M/423M [00:11&lt;00:00, 27.5MB/s]"}},"eb25d09854f34c6fb1ec0d98c97da0e5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fc62ba30efca426094d5c2cff88916b6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ede14d3dbb1645f9b522c57cc3723b3f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8fd81e0d102a4806b1cb92ced3d3907d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c6e5e86209a64e159cc7cd02f1a1c971":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fa9151ae14144e8098f54662cee562c1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7f27d730b64c4bb1a91d243136b703b1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3c05f601fa114306b3594654b4dd7d4b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ec8156d389564e1ebda507ad9ae3fbf9","IPY_MODEL_de73b8e75f49426a84cc42ac977997d2","IPY_MODEL_e534568b62ea42ce91a2f809d1eb58a4"],"layout":"IPY_MODEL_b89fe2b301d74e25a8dd7b2bf8e6cc3b"}},"ec8156d389564e1ebda507ad9ae3fbf9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8a71a034bbc0485ca27c22545ceaee79","placeholder":"​","style":"IPY_MODEL_bd24c92686624a12a090b2d4c8d4ce71","value":"Downloading: 100%"}},"de73b8e75f49426a84cc42ac977997d2":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cd8c9ab3f00d483a88b33e05bd68203b","max":282,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4e00a38c39a444b99f82e3b815192f26","value":282}},"e534568b62ea42ce91a2f809d1eb58a4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_18b2ffa0f62545449da84407b135b093","placeholder":"​","style":"IPY_MODEL_cccc7a8c6a9d48cfb1750864be0772f8","value":" 282/282 [00:00&lt;00:00, 3.36kB/s]"}},"b89fe2b301d74e25a8dd7b2bf8e6cc3b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8a71a034bbc0485ca27c22545ceaee79":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bd24c92686624a12a090b2d4c8d4ce71":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cd8c9ab3f00d483a88b33e05bd68203b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4e00a38c39a444b99f82e3b815192f26":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"18b2ffa0f62545449da84407b135b093":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cccc7a8c6a9d48cfb1750864be0772f8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0c9b233d3ece461980e65c8b43972037":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c638e5495536433a9232260ab67670ce","IPY_MODEL_68b31e88b06a460d883623ec5fc88b71","IPY_MODEL_34a8975f479c4565bf1ca4687268cd68"],"layout":"IPY_MODEL_7e9a66bc452a4709b1e609e3eeb36620"}},"c638e5495536433a9232260ab67670ce":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_996bae0d44c5452e9def6d16ad069300","placeholder":"​","style":"IPY_MODEL_857e4dd43e794988aeeda9be8e0ff40a","value":"Downloading: 100%"}},"68b31e88b06a460d883623ec5fc88b71":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_751abf8e2be94fc0a880110ac1f22188","max":904693,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ad788a8d9d244aefa451cddad7264dc7","value":904693}},"34a8975f479c4565bf1ca4687268cd68":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c6557fa568064c87b5c23684768674f7","placeholder":"​","style":"IPY_MODEL_411d0461b62749a386b95a63b4311120","value":" 905k/905k [00:00&lt;00:00, 978kB/s]"}},"7e9a66bc452a4709b1e609e3eeb36620":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"996bae0d44c5452e9def6d16ad069300":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"857e4dd43e794988aeeda9be8e0ff40a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"751abf8e2be94fc0a880110ac1f22188":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ad788a8d9d244aefa451cddad7264dc7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c6557fa568064c87b5c23684768674f7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"411d0461b62749a386b95a63b4311120":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f1a7b953688447adbcb63fd7b664f1aa":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a3fea809bed6498098fab95c434e75f2","IPY_MODEL_c8b3b53c48c84e03ae4a294844634ab3","IPY_MODEL_a8707b08bdf64b489ef515b07e3e220f"],"layout":"IPY_MODEL_3b165ffc5ba64e7aa992ce46d47ae64e"}},"a3fea809bed6498098fab95c434e75f2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c0d0b933ba824e90be6b0e0e900be802","placeholder":"​","style":"IPY_MODEL_bf32469a7290449cbcdbb75aac2e6717","value":"100%"}},"c8b3b53c48c84e03ae4a294844634ab3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_46d96bebefd747bcb22d888b3d61829d","max":21,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8ee185e3089847a7a9c82fac7f47e315","value":21}},"a8707b08bdf64b489ef515b07e3e220f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0887c532cf9145cebe5a45be0eca4686","placeholder":"​","style":"IPY_MODEL_9d5a7d6e637949418b68f4764293fccc","value":" 21/21 [13:09&lt;00:00, 30.47s/ba]"}},"3b165ffc5ba64e7aa992ce46d47ae64e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c0d0b933ba824e90be6b0e0e900be802":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bf32469a7290449cbcdbb75aac2e6717":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"46d96bebefd747bcb22d888b3d61829d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8ee185e3089847a7a9c82fac7f47e315":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0887c532cf9145cebe5a45be0eca4686":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9d5a7d6e637949418b68f4764293fccc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2524dc209f1548b9b815fcdb62acdef0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_58799fbd7ba54ef2879789f82c6c04d6","IPY_MODEL_0eb441aa5e234fcaa6e8f6fda4a220f3","IPY_MODEL_edc853b2b7bf44b5be3d2ba5ec504363"],"layout":"IPY_MODEL_9aa1ce041fab4a8e9b7a328079825558"}},"58799fbd7ba54ef2879789f82c6c04d6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_46c14e31c5ad48cda5ef236648f89b09","placeholder":"​","style":"IPY_MODEL_74d23ed6d009472f9419a096a403d150","value":"100%"}},"0eb441aa5e234fcaa6e8f6fda4a220f3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7b3c087a224a4ac59d47230ce88f0017","max":2,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2454d1971bb14a45af2420bba896110a","value":2}},"edc853b2b7bf44b5be3d2ba5ec504363":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e53c099a9fb741daaa89c11465c6477c","placeholder":"​","style":"IPY_MODEL_4888c0c28cf54ff88209061ee9d9c005","value":" 2/2 [00:55&lt;00:00, 26.58s/ba]"}},"9aa1ce041fab4a8e9b7a328079825558":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46c14e31c5ad48cda5ef236648f89b09":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"74d23ed6d009472f9419a096a403d150":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7b3c087a224a4ac59d47230ce88f0017":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2454d1971bb14a45af2420bba896110a":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e53c099a9fb741daaa89c11465c6477c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4888c0c28cf54ff88209061ee9d9c005":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}